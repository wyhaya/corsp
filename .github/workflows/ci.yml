name: Build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job: 
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            cross: false
            test: true
            publish: true

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            test: false

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true
            test: false

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            test: false

          - target: x86_64-apple-darwin
            os: macos-latest
            cross: false
            test: true

          - target: aarch64-apple-darwin
            os: macos-latest
            cross: false
            test: false

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
            test: true

    env:
      NAME: corsp

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          target: ${{ matrix.job.target }}

      - name: Cargo cache 
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.job.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo test
        uses: actions-rs/cargo@v1
        if: matrix.job.test
        with:
          command: test
          args: --target ${{ matrix.job.target }}

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.job.target }}
          use-cross: ${{ matrix.job.cross }}

      # -------------- GitHub Release --------------

      - name: Package zip (unix)
        if: startsWith(github.ref, 'refs/tags/') && matrix.job.os != 'windows-latest'
        run: |
          cd ./target/${{ matrix.job.target }}/release/
          zip ${{ env.NAME }}-${{ matrix.job.target }}.zip ${{ env.NAME }}
      
      - name: Package zip (windows)
        if: startsWith(github.ref, 'refs/tags/') && matrix.job.os == 'windows-latest'
        run: |
          cd ./target/${{ matrix.job.target }}/release/
          Compress-Archive -CompressionLevel Optimal -Force -Path ${{ env.NAME }}.exe -DestinationPath ${{ env.NAME }}-${{ matrix.job.target }}.zip
      
      - name: GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./target/**/*.zip
